{
  "version": 3,
  "sources": ["../../bin/live-reload.js", "../../src/analytics/subscription.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type { GetCurrentMemberPayload } from '@memberstack/dom';\n\n// @ts-expect-error \"Data Layer\"\nwindow.dataLayer = window.dataLayer || [];\nwindow.Webflow ||= [];\n\nwindow.Webflow.push(() => {\n  window.addEventListener('load', init);\n});\n\nfunction init() {\n  const { priceId, isFromCheckout } = parseUrl();\n  if (!priceId || !isFromCheckout) {\n    redirect();\n    return;\n  }\n\n  const memberData = getMemberData() as GetCurrentMemberPayload['data'] | undefined;\n  if (!memberData) return redirect();\n\n  const successPlan = memberData.planConnections.find(\n    (plan) =>\n      plan.active &&\n      plan.payment?.priceId === priceId &&\n      plan.payment.status === 'PAID' &&\n      !plan.payment.cancelAtDate &&\n      plan?.payment?.lastBillingDate &&\n      verifyPlan(plan?.payment?.lastBillingDate as unknown as string)\n  );\n  if (!successPlan) return redirect();\n\n  pushToDataLayer(memberData, successPlan.planId);\n}\n\nfunction verifyPlan(timestamp: string) {\n  const currentTimestamp = Math.floor(Date.now() / 1000); // Current timestamp in seconds\n  return currentTimestamp - Number(timestamp) < 0.5 * 60;\n}\n\nfunction redirect() {\n  window.location.href = '/';\n}\n\nfunction parseUrl() {\n  const url = new URL(window.location.href);\n\n  const isFromCheckout = url.searchParams.get('fromCheckout');\n  const priceId = url.searchParams.get('msPriceId');\n  return {\n    priceId,\n    isFromCheckout,\n  };\n}\n\nfunction getMemberData() {\n  const data = localStorage.getItem('_ms-mem');\n  return data ? JSON.parse(data) : undefined;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any\nfunction pushToDataLayer(\n  memberData: GetCurrentMemberPayload['data'] & {\n    customFields: { ['first-name']?: string; ['last-name']?: string; ['location']?: string };\n  },\n  planId: string\n) {\n  const event = JSON.stringify({\n    event: 'myo-new-subscription',\n    newInstructionsSubscription: {\n      memberEmail: memberData.auth.email,\n      memberId: memberData.id,\n      memberFirstName: memberData.customFields['first-name'],\n      memberLastName: memberData.customFields['last-name'],\n      memberLocation: memberData.customFields?.location,\n      stripeCustomerId: memberData.stripeCustomerId,\n      planId,\n    },\n  });\n\n  // @ts-expect-error \"data layer\"\n  window.dataLayer.push(event);\n\n  return event;\n}\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,uBAAY,UAAU,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACK7F,SAAO,YAAY,OAAO,aAAa,CAAC;AACxC,SAAO,YAAY,CAAC;AAEpB,SAAO,QAAQ,KAAK,MAAM;AACxB,WAAO,iBAAiB,QAAQ,IAAI;AAAA,EACtC,CAAC;AAED,WAAS,OAAO;AACd,UAAM,EAAE,SAAS,eAAe,IAAI,SAAS;AAC7C,QAAI,CAAC,WAAW,CAAC,gBAAgB;AAC/B,eAAS;AACT;AAAA,IACF;AAEA,UAAM,aAAa,cAAc;AACjC,QAAI,CAAC;AAAY,aAAO,SAAS;AAEjC,UAAM,cAAc,WAAW,gBAAgB;AAAA,MAC7C,CAAC,SACC,KAAK,UACL,KAAK,SAAS,YAAY,WAC1B,KAAK,QAAQ,WAAW,UACxB,CAAC,KAAK,QAAQ,gBACd,MAAM,SAAS,mBACf,WAAW,MAAM,SAAS,eAAoC;AAAA,IAClE;AACA,QAAI,CAAC;AAAa,aAAO,SAAS;AAElC,oBAAgB,YAAY,YAAY,MAAM;AAAA,EAChD;AAEA,WAAS,WAAW,WAAmB;AACrC,UAAM,mBAAmB,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI;AACrD,WAAO,mBAAmB,OAAO,SAAS,IAAI,MAAM;AAAA,EACtD;AAEA,WAAS,WAAW;AAClB,WAAO,SAAS,OAAO;AAAA,EACzB;AAEA,WAAS,WAAW;AAClB,UAAM,MAAM,IAAI,IAAI,OAAO,SAAS,IAAI;AAExC,UAAM,iBAAiB,IAAI,aAAa,IAAI,cAAc;AAC1D,UAAM,UAAU,IAAI,aAAa,IAAI,WAAW;AAChD,WAAO;AAAA,MACL;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAEA,WAAS,gBAAgB;AACvB,UAAM,OAAO,aAAa,QAAQ,SAAS;AAC3C,WAAO,OAAO,KAAK,MAAM,IAAI,IAAI;AAAA,EACnC;AAGA,WAAS,gBACP,YAGA,QACA;AACA,UAAM,QAAQ,KAAK,UAAU;AAAA,MAC3B,OAAO;AAAA,MACP,6BAA6B;AAAA,QAC3B,aAAa,WAAW,KAAK;AAAA,QAC7B,UAAU,WAAW;AAAA,QACrB,iBAAiB,WAAW,aAAa,YAAY;AAAA,QACrD,gBAAgB,WAAW,aAAa,WAAW;AAAA,QACnD,gBAAgB,WAAW,cAAc;AAAA,QACzC,kBAAkB,WAAW;AAAA,QAC7B;AAAA,MACF;AAAA,IACF,CAAC;AAGD,WAAO,UAAU,KAAK,KAAK;AAE3B,WAAO;AAAA,EACT;",
  "names": []
}
