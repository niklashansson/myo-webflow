{
  "version": 3,
  "sources": ["../../../bin/live-reload.js", "../../../src/features/memberstack/medlemskap.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nwindow.Webflow ||= [];\nwindow.Webflow.push(async () => {\n  // @ts-expect-error \"memberstack\"\n  const memberstack = window.$memberstackDom;\n\n  const { data: member } = await memberstack.getCurrentMember();\n\n  if (!member) return;\n\n  const { planConnections } = member;\n\n  planConnections.forEach((plan: any) => {\n    const {\n      planId,\n      active,\n      payment: { cancelAtDate, nextBillingDate },\n    } = plan;\n\n    // plan not active\n    if (!active) return;\n\n    // plan active\n    const planEl = document.querySelector(`[memberstack-plan-id=${planId}]`);\n    if (!planEl) return;\n\n    // plan cancelled\n    if (cancelAtDate) {\n      planEl.classList.add('is-cancelled-plan');\n\n      const cancelAtDateEl = planEl.querySelector('[memberstack-plan-element=cancel-date]');\n      if (!cancelAtDateEl) return;\n\n      const cancelAtMs = cancelAtDate * 1000;\n      const cancelAtDateFormatted = formatDate(cancelAtMs);\n\n      cancelAtDateEl.textContent = cancelAtDateFormatted;\n    }\n\n    // active\n    if (nextBillingDate && !cancelAtDate) {\n      planEl.classList.add('is-current-plan');\n\n      const nextBillingEl = planEl.querySelector('[memberstack-plan-element=next-billing-date]');\n      if (!nextBillingEl) return;\n\n      const nextBillingDateMs = nextBillingDate * 1000;\n      const nextBillingDateFormatted = formatDate(nextBillingDateMs);\n\n      nextBillingEl.textContent = nextBillingDateFormatted;\n    }\n  });\n});\n\nfunction formatDate(dateMs: number) {\n  const date = new Date(dateMs);\n\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, '0');\n  const day = String(date.getDate()).padStart(2, '0');\n\n  return `${year}-${month}-${day}`;\n}\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,uBAAY,UAAU,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACC7F,SAAO,YAAY,CAAC;AACpB,SAAO,QAAQ,KAAK,YAAY;AAE9B,UAAM,cAAc,OAAO;AAE3B,UAAM,EAAE,MAAM,OAAO,IAAI,MAAM,YAAY,iBAAiB;AAE5D,QAAI,CAAC;AAAQ;AAEb,UAAM,EAAE,gBAAgB,IAAI;AAE5B,oBAAgB,QAAQ,CAAC,SAAc;AACrC,YAAM;AAAA,QACJ;AAAA,QACA;AAAA,QACA,SAAS,EAAE,cAAc,gBAAgB;AAAA,MAC3C,IAAI;AAGJ,UAAI,CAAC;AAAQ;AAGb,YAAM,SAAS,SAAS,cAAc,wBAAwB,MAAM,GAAG;AACvE,UAAI,CAAC;AAAQ;AAGb,UAAI,cAAc;AAChB,eAAO,UAAU,IAAI,mBAAmB;AAExC,cAAM,iBAAiB,OAAO,cAAc,wCAAwC;AACpF,YAAI,CAAC;AAAgB;AAErB,cAAM,aAAa,eAAe;AAClC,cAAM,wBAAwB,WAAW,UAAU;AAEnD,uBAAe,cAAc;AAAA,MAC/B;AAGA,UAAI,mBAAmB,CAAC,cAAc;AACpC,eAAO,UAAU,IAAI,iBAAiB;AAEtC,cAAM,gBAAgB,OAAO,cAAc,8CAA8C;AACzF,YAAI,CAAC;AAAe;AAEpB,cAAM,oBAAoB,kBAAkB;AAC5C,cAAM,2BAA2B,WAAW,iBAAiB;AAE7D,sBAAc,cAAc;AAAA,MAC9B;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AAED,WAAS,WAAW,QAAgB;AAClC,UAAM,OAAO,IAAI,KAAK,MAAM;AAE5B,UAAM,OAAO,KAAK,YAAY;AAC9B,UAAM,QAAQ,OAAO,KAAK,SAAS,IAAI,CAAC,EAAE,SAAS,GAAG,GAAG;AACzD,UAAM,MAAM,OAAO,KAAK,QAAQ,CAAC,EAAE,SAAS,GAAG,GAAG;AAElD,WAAO,GAAG,IAAI,IAAI,KAAK,IAAI,GAAG;AAAA,EAChC;",
  "names": []
}
